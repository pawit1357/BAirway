<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="modelUserBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>103</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfDg8Anw4PFp8OD72fDg9Knw4PAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACfDg8Anw4PAJ8OD1yfDg9Fnw4PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnw4PAJ8O
        DyKfDg8vnw4PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnw4PAJ8ODw6fDg8cnw4PAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnw4PAJ8ODxCfDg8fnw4PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnw4PAJ8ODwSfDg8Hnw4PAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AwAADAMAAAwDAAAMA////AP/+fwDwAB8A4AAfAMIA
        HwDBAAMAwAADAMAAAwDABycA4A//APA//wD4P/8A/D//AP4//wD/P/8A/z//AP8//wD/P/8A/z//AP//
        /wA=
</value>
  </data>
</root>